/* eslint-disable  */
const _interopRequireDefault = require('@babel/runtime-corejs3/helpers/interopRequireDefault'); const _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');

_Object$defineProperty(exports, '__esModule', { value: !0 }), exports.default = exports.clearOption = exports.disableOption = void 0; const _setTimeout2 = _interopRequireDefault(require('@babel/runtime-corejs3/core-js-stable/set-timeout')); const _map = _interopRequireDefault(require('@babel/runtime-corejs3/core-js-stable/instance/map')); const _slicedToArray2 = _interopRequireDefault(require('@babel/runtime-corejs3/helpers/slicedToArray')); const _classCallCheck2 = _interopRequireDefault(require('@babel/runtime-corejs3/helpers/classCallCheck')); const _createClass2 = _interopRequireDefault(require('@babel/runtime-corejs3/helpers/createClass')); const _possibleConstructorReturn2 = _interopRequireDefault(require('@babel/runtime-corejs3/helpers/possibleConstructorReturn')); const _getPrototypeOf2 = _interopRequireDefault(require('@babel/runtime-corejs3/helpers/getPrototypeOf')); const _assertThisInitialized2 = _interopRequireDefault(require('@babel/runtime-corejs3/helpers/assertThisInitialized')); const _inherits2 = _interopRequireDefault(require('@babel/runtime-corejs3/helpers/inherits')); const _react = _interopRequireDefault(require('react')); const _store = require('src/store'); require('./index.scss'); const _actions = require('../../constants/actions');

const mask = document.querySelector('#mask'); const disableOption = function () { mask.style.display = 'block'; }; exports.disableOption = disableOption; const clearOption = function () { mask.style.display = 'none'; }; exports.clearOption = clearOption; const Page = (function (_React$Component) {
  function Page() {
    let _this; return (0, _classCallCheck2.default)(this, Page), (_this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Page).call(this))).getChildrens = function (props) {
      let _context; disableOption(); const { children } = props; const { pageSlideClass } = ((0, _store.getStoreState)() || {}).global; let { preChildren } = (0, _assertThisInitialized2.default)(_this); const _React$Children$map = (0, _map.default)(_context = _react.default.Children).call(_context, children, item => item);
      let nextChildren = (0, _slicedToArray2.default)(_React$Children$map, 1)[0];
      let childrens = [nextChildren]; preChildren && nextChildren.key !== preChildren.key && pageSlideClass !== 'page-none' ? (_this.nextChildren = props, pageSlideClass === 'page-left' ? childrens = [preChildren = _react.default.cloneElement(preChildren, { className: 'page-left-pre' }), nextChildren = _react.default.cloneElement(nextChildren, { className: 'page-left-next' })] : pageSlideClass === 'page-right' && (preChildren = _react.default.cloneElement(preChildren, { className: 'page-right-pre' }), childrens = [nextChildren = _react.default.cloneElement(nextChildren, { className: 'page-right-next' }), preChildren])) : (_this.nextChildren = null, clearOption()), _this.preChildren = nextChildren, _this.setState({ childrens: _react.default.createElement('div', { className: 'page-action-box' }, childrens) }); 
    }, _this.preChildren = null, _this.nextChildren = null, _this; 
  } return (0, _inherits2.default)(Page, _React$Component), (0, _createClass2.default)(Page, [{ key: 'componentWillMount', value() { this.getChildrens(this.props); } }, { key: 'componentWillReceiveProps', value(nextProps) { this.getChildrens(nextProps); } }, { key: 'componentDidUpdate', value() { const _this2 = this; this.nextChildren && ((0, _setTimeout2.default)(() => { document.querySelector('.page-action-box').classList.add('action'); }, 50), (0, _setTimeout2.default)(() => { clearOption(), document.querySelector('.page-action-box').classList.remove('action'), _this2.getChildrens(_this2.nextChildren), (0, _store.getStoreDispatch)({ type: _actions.SET_GLOBAL_PAGE_SLIDE_CLASS, data: 0 }); }, 300)); } }, { key: 'render', value() { return this.state.childrens; } }]), Page; 
}(_react.default.Component)); Page.state = { childrens: null }; const _default = Page; exports.default = _default;
